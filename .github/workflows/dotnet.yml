# CI/CD Pipeline for Fiszki (merged build, test, deploy)
# This workflow supersedes main_fiszki.yml. It builds on every branch/PR, runs unit tests,
# and deploys to Azure only after successful build & tests on pushes to main.

name: CI/CD Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'Fiszki.sln'
  ARTIFACT_NAME: 'fiszki-release-build'
  PUBLISH_DIR: './publish'

jobs:
  build:
    name: 🔨 Build (Release)
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 🔄 Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: 🔨 Build (Release)
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: 📦 Publish artifacts
        run: dotnet publish ${{ env.SOLUTION_FILE }} --configuration Release --no-build --output ${{ env.PUBLISH_DIR }}

      - name: 🗂️ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIR }}/
          retention-days: 7

  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 🔄 Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: 🔨 Build for tests
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Debug --no-restore

      - name: 🧪 Run unit tests
        run: |
          dotnet test Fiszki.Tests/Fiszki.Tests.csproj \
            --configuration Debug \
            --no-build \
            --verbosity normal \
            --logger trx \
            --results-directory ./test-results \
            --collect:"XPlat Code Coverage"

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: ./test-results/
          retention-days: 7

      - name: 📈 Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-coverage
          path: ./test-results/**/coverage.cobertura.xml
          retention-days: 7

  required-status-check:
    name: Required Status Check
    runs-on: ubuntu-latest
    needs: [build, unit-tests]
    if: always()
    steps:
      - name: 🛡️ Verify all jobs passed
        run: |
          echo "Checking status of all required jobs..."
          echo "Build status: ${{ needs.build.result }}"
          echo "Unit Tests status: ${{ needs.unit-tests.result }}"
          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "❌ Build job failed or was cancelled"; exit 1; fi
          if [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
            echo "❌ Unit Tests job failed or was cancelled"; exit 1; fi
          echo "✅ All required jobs passed - safe to proceed"

  deploy:
    name: 🚀 Deploy to Azure (main)
    runs-on: ubuntu-latest
    needs: [required-status-check]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.required-status-check.result == 'success'
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIR }}

      - name: 🚀 Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Fiszki'
          slot-name: 'Production'
          package: ${{ env.PUBLISH_DIR }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_93FA90C48A7B43BE9A3E282FD84CA1DA }}
